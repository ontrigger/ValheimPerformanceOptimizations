<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <ProjectGuid>{AD2F8A00-7A5E-460D-80ED-F48DF0221D8C}</ProjectGuid>
        <OutputType>Library</OutputType>
        <AppDesignerFolder>Properties</AppDesignerFolder>
        <RootNamespace>ValheimPerformanceOptimizations</RootNamespace>
        <AssemblyName>ValheimPerformanceOptimizations</AssemblyName>
        <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
        <FileAlignment>512</FileAlignment>
        <LangVersion>9</LangVersion>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>pdbonly</DebugType>
        <Optimize>false</Optimize>
        <OutputPath>bin\Debug\</OutputPath>
        <DefineConstants>DEBUG;TRACE;ENABLE_PROFILER;_DEBUG</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <OutputPath>bin\Release\</OutputPath>
        <DefineConstants>TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    <ItemGroup>
        <Reference Include="0Harmony, Culture=neutral, PublicKeyToken=null">
            <HintPath>$(VALHEIM_INSTALL)\BepInEx\core\0Harmony.dll</HintPath>
        </Reference>
        <Reference Include="assembly_guiutils">
          <HintPath>D:\SteamLibrary\steamapps\common\Valheim\valheim_Data\Managed\publicized_assemblies\assembly_guiutils_publicized.dll</HintPath>
        </Reference>
        <Reference Include="assembly_utils, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
          <HintPath>$(VALHEIM_INSTALL)\valheim_Data\Managed\publicized_assemblies\assembly_utils_publicized.dll</HintPath>
        </Reference>
        <Reference Include="assembly_valheim, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
          <HintPath>$(VALHEIM_INSTALL)\valheim_Data\Managed\publicized_assemblies\assembly_valheim_publicized.dll</HintPath>
        </Reference>
        <Reference Include="BepInEx, Culture=neutral, PublicKeyToken=null">
            <HintPath>$(VALHEIM_INSTALL)\BepInEx\core\BepInEx.dll</HintPath>
        </Reference>
        <Reference Include="BepInEx.Harmony, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>$(VALHEIM_INSTALL)\BepInEx\core\BepInEx.Harmony.dll</HintPath>
        </Reference>
        <Reference Include="Jotunn, Culture=neutral, PublicKeyToken=null">
          <HintPath Condition="Exists('$(VALHEIM_INSTALL)\BepInEx\plugins\Jotunn.dll')">$(VALHEIM_INSTALL)\BepInEx\plugins\Jotunn.dll</HintPath>
          <HintPath Condition="Exists('$(R2MODMAN_INSTALL)\BepInEx\plugins\ValheimModding-Jotunn\Jotunn.dll')">$(R2MODMAN_INSTALL)\BepInEx\plugins\ValheimModding-Jotunn\Jotunn.dll</HintPath>
        </Reference>
        <Reference Include="Microsoft.CSharp" />
        <Reference Include="System" />
        <Reference Include="System.Core" />
        <Reference Include="System.Data" />
        <Reference Include="System.Xml" />
        <Reference Include="Unity.Collections">
          <HintPath>D:\SteamLibrary\steamapps\common\Valheim\valheim_Data\Managed\Unity.Collections.dll</HintPath>
        </Reference>
        <Reference Include="Unity.Jobs">
          <HintPath>D:\SteamLibrary\steamapps\common\Valheim\valheim_Data\Managed\Unity.Jobs.dll</HintPath>
        </Reference>
        <Reference Include="Unity.Mathematics">
          <HintPath>D:\SteamLibrary\steamapps\common\Valheim\valheim_Data\Managed\Unity.Mathematics.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
          <HintPath>$(VALHEIM_INSTALL)\unstripped_corlib\UnityEngine.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.AssetBundleModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
          <HintPath>$(VALHEIM_INSTALL)\unstripped_corlib\UnityEngine.AssetBundleModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>$(VALHEIM_INSTALL)\unstripped_corlib\UnityEngine.CoreModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.IMGUIModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>$(VALHEIM_INSTALL)\unstripped_corlib\UnityEngine.IMGUIModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.ParticleSystemModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>$(VALHEIM_INSTALL)\unstripped_corlib\UnityEngine.ParticleSystemModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.ImageConversionModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>$(VALHEIM_INSTALL)\unstripped_corlib\UnityEngine.ImageConversionModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.PhysicsModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>$(VALHEIM_INSTALL)\unstripped_corlib\UnityEngine.PhysicsModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.TextRenderingModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>$(VALHEIM_INSTALL)\unstripped_corlib\UnityEngine.TextRenderingModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.UI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>$(VALHEIM_INSTALL)\unstripped_corlib\UnityEngine.UI.dll</HintPath>
        </Reference>
    </ItemGroup>
    <ItemGroup>
        <Compile Include="Patches\ClutterSystemRenderQueuePatch.cs" />
        <Compile Include="Patches\EffectArea\VPOEffectArea.cs" />
        <Compile Include="Patches\GetStandingOnShipPatch.cs" />
        <Compile Include="Patches\GetWaterLevel\GetWaterLevelPatch.cs" />
        <Compile Include="Patches\GetWaterLevel\VPOZoneTracker.cs" />
        <Compile Include="Patches\HeightmapGeneration\HeightmapColorAllocationPatch.cs" />
        <Compile Include="Patches\MaxPhysicsTimeStepPatch.cs" />
        <Compile Include="Patches\MinimapGenerationPatch.cs" />
        <Compile Include="Patches\ObjectPooling\ConnectPanelPatch.cs" />
        <Compile Include="Patches\ObjectPooling\ObjectPoolingPatch.ZNetScene.cs" />
        <Compile Include="Patches\ObjectPooling\ObjectPoolingPatch.cs" />
        <Compile Include="Patches\ObjectPooling\ObjectPoolingPatch.ZoneSystem.cs" />
        <Compile Include="Patches\PrefabOptimization\PrefabMaterialCombiner.cs" />
        <Compile Include="Patches\PrefabOptimization\PrefabPatches.cs" />
        <Compile Include="Patches\SmokeRendering\SmokeRenderingPatch.cs" />
        <Compile Include="Patches\SmokeRendering\VPOSmokeRenderer.cs" />
        <Compile Include="Patches\TerrainShadow\TerrainPatches.cs" />
        <Compile Include="Patches\HeightmapGeneration\ThreadedHeightmapCollisionBakePatch.cs" />
        <Compile Include="Patches\HeightmapGeneration\VPOTerrainCollisionBaker.cs" />
        <Compile Include="Patches\ThreadedWorldLoadingPatch.cs" />
        <Compile Include="Patches\Water\VPOWaterVolumeManager.cs" />
        <Compile Include="Patches\Water\WaterVolumeVisibilityPatch.cs" />
        <Compile Include="Patches\WearNTear\WearNTearCachingPatch.cs" />
        <Compile Include="Patches\ZNetSceneObjectManagementPatch.cs" />
        <Compile Include="Patches\ZNetViewPrefabNamePatch.cs" />
        <Compile Include="Utils\AssetBundleHelper.cs" />
        <Compile Include="Utils\Extensions\BoundsX.cs" />
        <Compile Include="Utils\Extensions\ListX.cs" />
        <Compile Include="Utils\Extensions\NumberX.cs" />
        <Compile Include="Utils\ModCompatibility.cs" />
        <Compile Include="Utils\Storage\BoundsOctree.cs" />
        <Compile Include="Utils\Storage\BoundsOctreeNode.cs" />
        <Compile Include="Utils\Storage\GameObjectPool.cs" />
        <Compile Include="ValheimPerformanceOptimizations.cs" />
        <Compile Include="Properties\AssemblyInfo.cs" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="AssetBundles\smoke_instanced_shader" />
    </ItemGroup>
    <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
    <Import Project="../Environment.props" />
    <PropertyGroup>
        <PostBuildEvent>
            if $(ConfigurationName) == Release (
            powershell Compress-Archive -Path '$(ProjectDir)Package\*' -DestinationPath '$(SolutionDir)PublishOutput\$(ProjectName).zip' -Force)
            if $(ConfigurationName) == Debug del "$(TargetPath).mdb"
            if $(ConfigurationName) == Debug $(SolutionDir)pdb2mdb.exe "$(TargetPath).dll"
            xcopy "$(TargetDir)" "$(VALHEIM_INSTALL)\Bepinex\plugins\$(ProjectName)\" /q /s /y /i
        </PostBuildEvent>
    </PropertyGroup>
</Project>